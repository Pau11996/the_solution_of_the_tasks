# 1) Напишите функцию to_float(num), которая преобразует любое число в число с плавающей точкой.
# Если в качестве аргумента передан другой тип данных, она возвращает «Невозможно преобразовать».

# def to_float(num):
#     if isinstance(num, float):
#         return int(num)
#     else:
#         print('«Невозможно преобразовать»')
#
#
# print(to_float(2.2))

# 2) Дано 4 числа.
# Нужно написать функцию avg_5(a, b, c, d), которая возвращает среднее арифметическое аргументов и округляет его до 5 знаков после запятой.

# def avg_5(a, b, c, d):
#     return round((a + b + c + d) / 4, 5)
#
#
# print(avg_5(113, 236, 21.21, 5.123445343234234))

# 3) Функция mul_to_int(a, b) может принимать целые или вещественные числа.
# Если результат умножения аргументов не имеет значимых чисел после запятой, то она возвращает его в виде целого числа.
# В противном случае – в виде float.

# def mul_to_int(a, b):
#     res = a*b
#     if float(res).is_integer():
#         return int(res)
#     return res
#
#
# print(mul_to_int(2, 4))
# print(mul_to_int(2.5, 4))
# print(mul_to_int(2.2, 2))

# 4) Дан объем шара X куб. ед.  # V = 4/3 πr3  math.pow(r, 1/3) = V/(4/3)/pi
# Найдите радиус фигуры.
# import math
#
#
# def radius(x):
#     return (3 * x / (4 * math.pi)) ** (1 / 3)
#
#
# print(radius(1234322345))
# print(round((4 / 3) * math.pi * 665.4467790145995 ** 3))

# 5) Напишите функцию округления round_standard(num),
# принимающую число с плавающей точкой и округляющую его до целого числа в соответствии с правилами школьной математики.
#
#
# def round_standard(num):
#     if num >= 0:
#         sign = 1
#     else:
#         sign = -1
#     return sign * int((abs(num) + 0.5))
#
#
# # Тесты
# print(round_standard(1.5))
# print(round_standard(-2.5))
# print(round_standard(1.6))
# print(round_standard(5.11))

# 6) Так как в Python операции с вещественными числами могут давать
# неожиданные результаты (в частности, 0.1 + 0.2 не будет в точности равняться 0.3), стоит задача с этим как-то справляться.
# Требуется написать функцию eqv(a, b, c), которая принимает 3 числа.
# Числа a и b складываются.
# Затем эта сумма сравнивается с числом “с” с определенной степенью точности.
# Точность равняется 0.01 % от большего из чисел a и b по модулю.
# Функция вернет True, если выполняется равенство, иначе False.

# def eqv(a, b, c):
#     res = a + b
#     e = 0.01 / 100  # Перевод процентов в долю
#     tolerance = e * max(abs(a), abs(b))  # Находим значение отклонения
#     return abs(res - c) <= tolerance  # Определяем, меньше ли разница, чем отклонение
#
# # Тесты
# print(eqv(0.12, 0.31, 0.43))
# print(eqv(0.1, 0.2, 0.3))
# print(eqv(0.1, 0.2, 0.4))
# print(eqv(-0.1, -0.2, -0.3))
